name: Release & Changelog

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Setup Node.js for release management
        uses: actions/setup-node@v4
        with:
          node-version: "lts/*"

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.x'

      - name: Install release tools
        run: |
          npm install -g semantic-release @semantic-release/changelog @semantic-release/git conventional-changelog-cli

      - name: Build & publish server and client for all platforms
        run: |
          mkdir -p release_artifacts

          # Build server for all platforms
          dotnet publish ./Server/Server.csproj -c Release -r win-x64 -o release_artifacts/server-win
          dotnet publish ./Server/Server.csproj -c Release -r linux-x64 -o release_artifacts/server-linux
          dotnet publish ./Server/Server.csproj -c Release -r osx-x64 -o release_artifacts/server-osx

          # Build client (TUI) for all platforms
          dotnet publish ./Client/Client.csproj -c Release -r win-x64 -o release_artifacts/client-win
          dotnet publish ./Client/Client.csproj -c Release -r linux-x64 -o release_artifacts/client-linux
          dotnet publish ./Client/Client.csproj -c Release -r osx-x64 -o release_artifacts/client-osx

      - name: Zip Artifacts
        run: |
          cd release_artifacts
          zip -r server-win.zip server-win
          zip -r server-linux.zip server-linux
          zip -r server-osx.zip server-osx
          zip -r client-win.zip client-win
          zip -r client-linux.zip client-linux
          zip -r client-osx.zip client-osx
          cd ..

      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npx semantic-release
